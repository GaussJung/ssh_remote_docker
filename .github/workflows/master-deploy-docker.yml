name: master_deploy_docker

on:
  push:
    branches:
      - master     

jobs:
  build:
    runs-on: ubuntu-latest  

    steps:
      # Step1. Checkout source code
      - name: Checkout source code
        uses: actions/checkout@v3

      # Step2-A. QEMU for cross-building
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Step2-B. Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step2-C. Docker Hub Login
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step2-D. Build & Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_REPOSITORY }}:latest

      # Step3. Prepare .env.production file on runner
      - name: Prepare .env.production content
        run: |
          echo "${{ secrets.DOTENV_FILE_CONTENT }}" > .env.production
          cat .env >> .env.production
          echo "Combined .env.production created."

      # Step4. Check .env.production file on runner
      - name: Check .env.production
        run: |
          echo "======= Checking .env.production ======="
          ls -l .env.production
          echo "========== FILE CONTENT =========="
          cat .env.production

      # Step5. Upload .env.production to server
      - name: Upload .env.production to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.SERVER_PORT }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          source: .env.production
          target: ${{ secrets.DOCKER_COMPOSE_ROOT }}/.env.production

      # Step6. Restart services via SSH
      - name: Restart services on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.SERVER_PORT }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script: |
            echo "========== START of Deployment =========="
            cd ${{ secrets.DOCKER_COMPOSE_ROOT }}
            sudo docker compose down
            sleep 1
            sudo docker rmi -f ${{ secrets.DOCKER_REPOSITORY }}:latest || true
            sleep 1
            sudo docker compose up -d
